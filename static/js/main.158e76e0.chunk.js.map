{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","handleClick","slice","calculateWinner","setState","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAIA,SAASA,EAAOC,GAEd,OACE,4BACEC,UAAU,SACVC,QAASF,EAAME,SAEdF,EAAMG,O,IAMPC,E,kDAEJ,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXC,QAASC,MAAM,GAAGC,OAClBC,SAAS,GAJM,E,yDAQNC,GAAI,IAAD,OACd,OAAO,kBAACX,EAAD,CACLI,MAAOQ,KAAKN,MAAMC,QAAQI,GAC1BR,QAAS,kBAAM,EAAKU,YAAYF,Q,kCAIxBA,GACV,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQO,QAChCC,EAAgBR,IAAYA,EAAQI,KAEvCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAS,IAAM,IACvCE,KAAKI,SAAS,CAAET,QAASA,EAASG,SAAUE,KAAKN,MAAMI,a,+BAIvD,IACIO,EADEC,EAASH,EAAgBH,KAAKN,MAAMC,SAU1C,OANEU,EADCC,EACQ,WAAaA,EAGb,iBAAmBN,KAAKN,MAAMI,QAAS,IAAM,KAItD,6BACE,yBAAKR,UAAU,UAAUe,GACzB,yBAAKf,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKjB,UAAU,aACZU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,S,GApDTC,IAAMC,WA2DpBC,E,uKAGF,OACE,yBAAKpB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,OAEF,yBAAKH,UAAU,aACb,8BACA,mC,GAVSkB,IAAMC,WA0BzB,SAASN,EAAgBR,GAWvB,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CAAC,IAAD,cACnBY,EAAMZ,GADa,GAC9Bc,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACpE,OAAOpB,EAAQkB,GAGnB,OAAO,KAxBTG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACR,EAAD,OAEFS,SAASC,eAAe,W","file":"static/js/main.158e76e0.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport \"./css/style.css\";\n\nfunction Square(props) {\n\n  return (\n    <button\n      className=\"square\"\n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n\n}\n\nclass Board extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(), // Array com todas as posições do tabuleiro\n      xIsNext: true,\n    }\n  }\n\n  renderSquare(i) {\n    return <Square\n      value={this.state.squares[i]}\n      onClick={() => this.handleClick(i)}\n    />;\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice(); // slice cria uma cópia dos arrays\n    if(calculateWinner(squares) || squares[i]){ return; }\n\n    squares[i] = this.state.xIsNext? 'X' : 'O';\n    this.setState({ squares: squares, xIsNext: !this.state.xIsNext }); // Setar novo valor para vetor de quadrados\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    \n    if(winner) {\n      status = 'Winner: ' + winner;\n    }\n    else {\n      status = 'Next player: ' + (this.state.xIsNext? 'X' : 'O');\n    }\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {  \n\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}